<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:cache="http://www.springframework.org/schema/cache"
       xmlns:c="http://www.springframework.org/schema/c"
       xmlns:util="http://www.springframework.org/schema/util" xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/cache 
        http://www.springframework.org/schema/cache/spring-cache.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd" default-autowire="byName">
    <!-- =================Spring data REDIS configuration =============================== -->
    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxTotal" value="#{config['cache.maxTotal']}"></property>
        <property name="maxIdle" value="#{config['cache.maxIdle']}"></property>
        <property name="maxWaitMillis" value="#{config['cache.maxWaitMillis']}"></property>
        <property name="minEvictableIdleTimeMillis" value="#{config['cache.minEvictableIdleTimeMillis']}"></property>
        <property name="numTestsPerEvictionRun" value="3"></property>
        <property name="timeBetweenEvictionRunsMillis" value="60000"></property>
    </bean>
    <bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
          destroy-method="destroy">
        <property name="poolConfig" ref="jedisPoolConfig"></property>
        <property name="hostName" value="#{config['jedis.master.host']}"></property>
        <property name="port" value="#{config['jedis.port']}"></property>
        <property name="password" value="#{config['jedis.pwd']}"></property>
        <property name="timeout" value="15000"></property>
        <property name="usePool" value="true"></property>
    </bean>
    <bean id="jedisConnectionFactorySlave"
          class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory" destroy-method="destroy">
        <property name="poolConfig" ref="jedisPoolConfig"></property>
        <property name="hostName" value="#{config['jedis.slave1.host']}"></property>
        <property name="port" value="#{config['jedis.port']}"></property>
        <property name="password" value="#{config['jedis.pwd']}"></property>
        <property name="timeout" value="15000"></property>
        <property name="usePool" value="true"></property>
    </bean>
    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
        <property name="connectionFactory" ref="jedisConnectionFactory"></property>
    </bean>
    <bean id="redisTemplateSlave" class="org.springframework.data.redis.core.RedisTemplate">
        <property name="connectionFactory" ref="jedisConnectionFactorySlave"/>
        <!--        <property name="keySerializer">
                    <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>
                </property>
                <property name="hashKeySerializer">
                    <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>
                </property>-->
    </bean>
    <!--c:password="#{config['jedis.pwd']}"-->
    <bean id="jedisPool" class="redis.clients.jedis.JedisPool" c:poolConfig-ref="jedisPoolConfig"
          c:host="#{config['jedis.master.host']}" c:port="#{config['jedis.port']}" c:password="#{config['jedis.pwd']}"
          c:timeout="15000"/>
    <util:list id="cacheList">
        <value>tmp</value>
        <value>auth</value>
        <value>system</value>
        <value>qCache</value>
        <value>#{config['AUTHOR_CACHE_NAME']}</value>
        <value>#{config['AUTHENT_CACHE_NAME']}</value>
        <value>shiroSession</value>
        <value>token</value>
        <value>columns</value>
        <value>offline</value>
    </util:list>
    <util:map id="cacheMap">
        <entry key="tmp" value="300"/><!--5分钟-->
        <entry key="auth" value="#{config['sessionExpireTime']}"/><!--30天-->
        <entry key="system" value="3650000000"/><!--不限时间-->
        <entry key="qCache" value="86400"/><!--24小时-->
        <entry key="#{config['AUTHOR_CACHE_NAME']}" value="3600"/>
        <entry key="#{config['AUTHENT_CACHE_NAME']}" value="3600"/>
        <entry key="shiroSession" value="#{config['sessionExpireTime']}"/>
        <entry key="token" value="#{config['sessionExpireTime']}"/>
        <entry key="columns" value="3650000000"/>
        <entry key="offline" value="86400"/>
    </util:map>
    <bean id="cacheManager" class="org.springframework.data.redis.cache.RedisCacheManager" c:redisOperations-ref="redisTemplate">
        <property name="cacheNames" ref="cacheList" />
        <property name="expires" ref="cacheMap">
        </property>
        <property name="defaultExpiration" value="300"/>
    </bean>

    <bean id="cacheManagerSlave" class="org.springframework.data.redis.cache.RedisCacheManager" c:redisOperations-ref="redisTemplateSlave">
        <property name="cacheNames" ref="cacheList" />
        <property name="expires" ref="cacheMap">
        </property>
        <property name="defaultExpiration" value="30"/>
    </bean>


    <bean id="jdkRedisSerializer" class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer"/>
    <!-- turn on declarative caching -->
    <cache:annotation-driven proxy-target-class="true" cache-manager="cacheManagerSlave" order="1001"/>
</beans>